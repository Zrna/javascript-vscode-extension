{
  "Import React": {
    "prefix": "imr",
    "body": ["import React from 'react';"],
    "description": "Imports react"
  },
  "Import React DOM": {
    "prefix": "imrd",
    "body": ["import ReactDOM from 'react-dom';"],
    "description": "Imports React DOM"
  },
  "Import Component": {
    "prefix": "imrc",
    "body": ["import React, { Component } from 'react';"],
    "description": "Imports React Component"
  },
  "Import Custom Component": {
    "prefix": "imcc",
    "body": ["import ${1:ComponentName} from '${2:ComponentLocation}';"],
    "description": "Imports Custom Component"
  },
  "Import React PureComponent": {
    "prefix": "imrpc",
    "body": ["import React, { PureComponent } from 'react';"],
    "description": "Imports React PureComponent"
  },
  "Creates state": {
    "prefix": "cst",
    "body": ["state = {", " ${1:key}: ${2:value}", "}"],
    "desctiption": "Creates state with 1 key:value"
  },
  "Creates componentDidMount": {
    "prefix": "cdm",
    "body": ["componentDidMount = () => {", " ${1:// do something}", "}"],
    "description": "Creates componentDidMount"
  },
  "Creates componentWillMount": {
    "prefix": "cwm",
    "body": ["componentWillMount = () => {", " ${1:// do something}", "}"],
    "description": "Creates componentWillMount "
  },
  "Creates componentWillUnmount": {
    "prefix": "cwun",
    "body": ["componentWillUnmount = () => {", " ${1:// do something}", "}"],
    "description": "Creates componentWillUnmount"
  },
  "Creates componentWillReceiveProps": {
    "prefix": "cwrp",
    "body": [
      "componentWillReceiveProps = (${1:nextProps}) => {",
      " ${2:// do something}",
      "}"
    ],
    "description": "Creates componentWillReceiveProps"
  },
  "Creates shouldComponentUpdate": {
    "prefix": "scup",
    "body": [
      "shouldComponentUpdate = (${1:nextProps}, ${2:nextState}) => {",
      " ${3:// do something}",
      "}"
    ],
    "description": "Creates shouldComponentUpdate"
  },
  "Creates componentWillUpdate": {
    "prefix": "cwup",
    "body": [
      "componentWillUpdate = (${1:nextProps}, ${2:nextState}) => {",
      " ${3:// do something}",
      "}"
    ],
    "description": "Creates componentWillUpdate"
  },
  "Creates componentDidUpdate": {
    "prefix": "cdup",
    "body": [
      "componentDidUpdate = (${1:prevProps}, ${2:prevState}) => {",
      " ${3:// do something}",
      "}"
    ],
    "description": "Creates componentDidUpdate"
  },
  "Creates React Class Component": {
    "prefix": "rcc",
    "body": [
      "import React, { Component } from 'react';",
      "$0",
      "class ${1:ClassName} extends Component {",
      " render() {",
      "   return (",
      "     <div></div>",
      "   )",
      " }",
      "}",
      "$0",
      "export default ${1:ClassName};"
    ],
    "description": "Creates React Class Component"
  },
  "Creates React Functional Component": {
    "prefix": "rfc",
    "body": [
      "import React from 'react';",
      "$0",
      "const ${1:ComponentName} = () => {",
      " return (",
      "   <div></div>",
      " )",
      "}",
      "$0",
      "export default ${1:ComponentName};"
    ],
    "description": "Creates React Functional Component"
  },
  "React useState Hook": {
    "prefix": "rush",
    "body": "const [${1:name}, ${2:setName}] = useState(${3});",
    "description": "Creates React useState Hook"
  },
  "React useEffect Hook": {
    "prefix": "rueh",
    "body": "useEffect(() => {${1}}${2});",
    "description": "Creates React useEffect Hook"
  },
  "React useRef Hook": {
    "prefix": "rurh",
    "body": "const ${1:refName} = useRef(${2});",
    "description": "Creates React useRef Hook"
  },
  "React useContext Hook": {
    "prefix": "ruch",
    "body": "const ${1:value} = useContext(${2});",
    "description": "Creates React useContext Hook"
  },
  "React useMemo Hook": {
    "prefix": "rumh",
    "body": "const ${1:memoizedValue} = useMemo(() => computeExpensiveValue(${2}), [${2}]);",
    "description": "Creates React useMemo Hook"
  },
  "React useCallback Hook": {
    "prefix": "rucbh",
    "body": "const ${1:name} = useCallback(() => { ${2} }, [${3}]);",
    "description": "Creates React useCallback Hook"
  },
  "React useDebugValue Hook": {
    "prefix": "rudbh",
    "body": "useDebugValue(${1:value});",
    "description": "Creates React useDebugValue Hook"
  }
}
